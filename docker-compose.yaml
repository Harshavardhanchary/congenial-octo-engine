version: '3.9'

services:
  # ---------- Database Service ----------
  db:
    image: mysql:8.0
    container_name: chattingo_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chattingo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
  # ---------- Backend Service ----------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chattingo_backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
    depends_on:
       db:
        condition: service_healthy
    networks:
      - chattingo-network

  # ---------- Frontend Service ----------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chattingo_frontend
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    depends_on:
      - backend
    networks:
      - chattingo-network

# ---------- Common Network ----------
networks:
  chattingo-network:
    driver: bridge

